#
# Copyright (c) 2019-2021 P3TERX <https://p3terx.com>
# Modified by guhill1 2022-2024
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# https://github.com/guhill1/auto-build-openwrt/
# Description: compile openwrt firmware by GitHub action

name: Compile Official test
on:
  #repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: main
  FEEDS_CONF: feeds.conf.default_of
  CONFIG_FILE: .config_of
  FILES: files_of
  
  # fils for patch
  FILES_PAT: files_of_pat
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2_of.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check disk space
        run: |
          df . -h
          echo some package removed

      #=========================================================================================================
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="


      - name: Freeing up disk space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      #=========================================================================================================
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # grub-efi-amd64-signed dependency issue in Ubuntu 22.04LTS
          # https://askubuntu.com/questions/1338497/grub-crashes-on-apt-upgrade-grub-install-error-cannot-find-efi-directory

          # sudo apt purge grub-efi-amd64-signed --allow-remove-essential -y
          # sudo apt install grub-pc

          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
          python3-setuptools rsync swig unzip zlib1g-dev file wget

          sudo timedatectl set-timezone "$TZ"

          sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

      - name: Clone source code
        working-directory: ./
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH

          # Fix: go问题:go.mod requires go >= 1.22 (running go 1.21.5; GOTOOLCHAIN=local)

          ./scripts/feeds clean
          ./scripts/feeds update -a
          rm -rf feeds/packages/lang/golang
          git clone https://github.com/kenzok8/golang feeds/packages/lang/golang
          ./scripts/feeds install -a
          #-----------------------------------------------------------------------------------------

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [ -e $FILES ] && mv $FILES openwrt/files
          [ -e $FILES_PAT ] && mv $FILES_PAT/* openwrt/ -f
          echo $FILES_PAT
          echo $FILES_PAT/*
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          cat feeds/packages/lang/ruby/Makefile
          
          



